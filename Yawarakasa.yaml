swagger: "2.0"
info:
  description: "開脚のやわらかさを競うWebアプリのAPI仕様書です．\n
  \n
  この画面の各APIの「Try it out」->「Execute」を利用することで\n
  ローカル環境で起動中のAPIにAPIリクエストをすることができます．"
  version: "1.0.0"
  title: "やわらかさ競争Webアプリ API"
host: "localhost:8080"
tags:
  - name: "user"
    description: "ユーザ関連API"
  - name: "yawarakasa"
    description: "柔らかさ関連API"
schemes:
  - "http"
paths:
  /user/create:
    post:
      tags:
        - "user"
      summary: "ユーザ情報作成API"
      description: "ユーザ情報を作成します。\n
      ユーザの名前・性別情報をリクエストで受け取り，ユーザID・性別と認証用のトークンを生成しデータベースへ保存します．"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Request Body"
          required: true
          schema:
            $ref: "#/definitions/UserCreateRequest"
      responses:
        200:
          "description": "A successful response."
          "schema":
            "$ref": "#/definitions/UserCreateResponse"

  /user/get:
    get:
      tags:
        - "user"
      summary: "ユーザ情報取得API"
      description: "ユーザ情報を取得します．\n
      ユーザの認証と特定の処理はリクエストヘッダのx-tokenを読み取ってデータベースに照会をします．"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "x-token"
          description: "認証トークン"
          required: true
          type: "string"
      responses:
        200:
          "description": "A successful response."
          "schema":
            "$ref": "#/definitions/UserGetResponse"

  /user/update:
    put:
      tags:
        - "user"
      summary: "ユーザ情報更新API"
      description: "ユーザ情報の更新をします．\n
      初期実装では名前の更新を行います．"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "x-token"
          description: "認証トークン"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Request Body"
          required: true
          schema:
            $ref: "#/definitions/UserUpdateRequest"
      responses:
        200:
          "description": "A successful response."

  /yawarakasa/create:
    post:
      tags:
        - "yawarakasa"
      summary: "やわらかさ情報作成API"
      description: "ユーザのやわらかさ・日付をリクエストで受け取り，ユーザテーブルへ保存します．\n
      ユーザは日にちごとに複数やわらかさの情報を所持することができます．\n
      \n"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Request Body"
          required: true
          schema:
            $ref: "#/definitions/YawarakasaCreateRequest"
      responses:
        200:
          "description": "A successful response."


  /yawarakasa/get:
    get:
      tags:
        - "yawarakasa"
      summary: "やわらかさ情報取得API"
      description: "やわらかさ情報を取得します．\n
      x-tokenと日付けを読み取ってやわらかさデータベースに照会をします．"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "x-token"
          description: "認証トークン"
          required: true
          type: "string"
        - in: "query"
          name: "year"
          description: "年"
          required: true
          type: "integer"
        - in: "query"
          name: "month"
          description: "年"
          required: true
          type: "integer"
        - in: "query"
          name: "day"
          description: "年"
          required: true
          type: "integer"
      responses:
        200:
          "description": "A successful response."
          "schema":
            "$ref": "#/definitions/YawarakasaGetResponse"


  /yawarakasa/ranking:
    get:
      tags:
        - "yawarakasa"
      summary: "やわらかさランキング取得API"
      description: "やわらかさのランキング情報を5位まで取得します．\n
      ソートされたやわらかさデータベースに照会をします．"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "start"
          description: "始まりの値"
          required: true
          type: "integer"
        - in: "query"
          name: "end"
          description: "終わりの値"
          required: true
          type: "integer"
      responses:
        200:
          "description": "A successful response."
          "schema":
            type: array
            items:
              "$ref": "#/definitions/YawarakasaGetResponse"


definitions:
  UserCreateRequest:
    type: "object"
    properties:
      name:
        type: "string"
        description: "ユーザ名"
      sex:
        type: "string"
        description: "性別"
  UserCreateResponse:
    type: "object"
    properties:
      token:
        type: "string"
        description: "クライアント側で保存するトークン"
  UserGetResponse:
    type: "object"
    properties:
      name:
        type: "string"
        description: "ユーザ名"
      sex:
        type: "string"
        description: "性別"
  UserUpdateRequest:
    type: "object"
    properties:
      name:
        type: "string"
        description: "ユーザ名"
      sex:
        type: "string"
        description: "性別"

  YawarakasaCreateRequest:
    type: "object"
    properties:
      token:
          type: "string"
          description: "認証トークン"
      yawarakasa:
        type: "integer"
        description: "やわらかさ"
      year:
        type: "integer"
        description: "年"
      month:
        type: "integer"
        description: "月"
      day:
        type: "integer"
        description: "日"
  YawarakasaGetResponse:
    type: "object"
    properties:
      yawarakasa:
        type: "integer"
        description: "やわらかさ"
      name:
        type: "string"
        description: "ユーザID"
      year:
        type: "integer"
        description: "年"
      month:
        type: "integer"
        description: "月"
      day:
        type: "integer"
        description: "日"
